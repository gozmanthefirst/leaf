model Session {
  id        String   @id
  expiresAt DateTime @map("expires_at") @db.Timestamp(6)
  token     String   @unique()
  createdAt DateTime @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @map("updated_at") @db.Timestamp(6)
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent")
  userId    String   @map("user_id")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String    @map("account_id")
  providerId            String    @map("provider_id")
  userId                String    @map("user_id")
  accessToken           String?   @map("access_token")
  refreshToken          String?   @map("refresh_token")
  idToken               String?   @map("id_token")
  accessTokenExpiresAt  DateTime? @map("access_token_expires_at") @db.Timestamp(6)
  refreshTokenExpiresAt DateTime? @map("refresh_token_expires_at") @db.Timestamp(6)
  scope                 String?
  password              String?
  createdAt             DateTime  @map("created_at") @db.Timestamp(6)
  updatedAt             DateTime  @map("updated_at") @db.Timestamp(6)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime  @map("expires_at") @db.Timestamp(6)
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime? @updatedAt @map("updated_at") @db.Timestamp(6)

  @@map("verification")
}
